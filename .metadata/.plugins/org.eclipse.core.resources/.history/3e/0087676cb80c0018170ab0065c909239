package cn.ksb.minitxt.server;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

import cn.ksb.minitxt.common.entity.DataTransfer;

public class ServerMain {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new ServerMain().startServer();
	}
	public void  startServer(){
		try {
			ServerSocket serverSocket = new ServerSocket(Integer.parseInt(Init.getProperty("")) );
			System.out.println("服务器启动成功");
			while(true){
				Socket socket = serverSocket.accept();
				System.out.println("客户端："+socket.getInetAddress()+"获取了链接");
				
//				创建获得客户端的io对象流  以对象流为根本
//				原因是为了以后的需求变化做准备
				ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
				ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
				
				DataTransfer<E> dataTransfer = (DataTransfer<?>) in.readObject();
				System.out.println("请求："+dataTransfer.getKey());
				
//				通过关键字Key,获得本次请求的相关业务实例
				Servers<E> servers = ServiceFactory.getServers(dataTransfer.getKey());
				servers.init(socket, in, out, dataTransfer.getDate());
				new Thread(servers).start();
			}
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
